# Automatizaci√≥n de Respuestas en Google Forms
Este proyecto contiene scripts que automatizan el llenado y env√≠o de respuestas en un formulario de Google Forms, utilizando Playwright tanto en Python como en Node.js (JavaScript).

Incluye:

Automatizaci√≥n masiva de respuestas (script libre).

Test de validaci√≥n de carga del formulario (archivo de prueba formal).

üìã Contenido del Proyecto
Archivo	Descripci√≥n
script.py	Script original en Python que env√≠a m√∫ltiples respuestas autom√°ticas a Google Forms.
llenar_formulario.js	Script en JavaScript (Node.js) que replica el env√≠o de respuestas m√∫ltiples.
formulario.test.js	Archivo de prueba formal que valida que el formulario carga correctamente (Playwright test).

Requisitos Previos
Antes de ejecutar los scripts, aseg√∫rate de tener instalado en tu sistema:

Requisito	Para Python	Para JavaScript (Node.js)
Python 3.x	‚úîÔ∏è	‚ùå
Pip	‚úîÔ∏è	‚ùå
Node.js y npm	‚ùå	‚úîÔ∏è
Playwright	‚úîÔ∏è (pip install playwright)	‚úîÔ∏è (npm install -D @playwright/test)

Instalaci√≥n
Para scripts en Python (Windows o Mac)
Instala Playwright para Python:



pip install playwright
python3 -m playwright install
Clona o descarga el proyecto.

Para scripts en JavaScript (Node.js) (Windows o Mac)
Instala Node.js desde nodejs.org.

Dentro del proyecto, instala Playwright:


npm install -D @playwright/test
npx playwright install

Configuraci√≥n
FORM_URL:
Modifica la constante FORM_URL en los scripts script.py y llenar_formulario.js para apuntar al enlace de tu propio Google Forms.

Cantidad de respuestas:
Ajusta el n√∫mero de iteraciones en range(50) en Python o en for (let i = 0; i < 50; i++) en JavaScript para definir cu√°ntas respuestas deseas enviar.

Ejecuci√≥n
En Windows o MacOS
Ejecutar el script en Python

python3 script.py
(o python script.py si tu sistema reconoce python directamente.)

Ejecutar el script en JavaScript

node llenar_formulario.js
Ejecutar el archivo de test (formulario.test.js)
En el package.json, aseg√∫rate de tener este script:


"scripts": {
  "test": "playwright test"
}
Corre en Terminal:


npm run test
Playwright buscar√° todos los archivos que terminen en .test.js y ejecutar√° las pruebas.

Notas importantes
El script en Python usa asyncio y playwright.async_api.

El script en Node.js usa @playwright/test.

La automatizaci√≥n est√° configurada para abrir el navegador de forma visible (headless: false).

Puedes modificar tiempos de espera (waitForTimeout) para hacer la simulaci√≥n m√°s humana o m√°s r√°pida.


